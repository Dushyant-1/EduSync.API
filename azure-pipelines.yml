trigger:
  branches:
    include:
      - master
  paths:
    include:
      - backend/**

variables:
- group: edusync-variables
- name: buildConfiguration
  value: 'Release'
- name: buildPlatform
  value: 'Any CPU'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
    - job: Build
      displayName: 'Build'
      pool:
        vmImage: 'windows-latest'
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'Restore'
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
            feedsToUse: 'select'

        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '--configuration $(buildConfiguration)'

        # - task: DotNetCoreCLI@2
        #   displayName: 'Test'
        #   inputs:
        #     command: 'test'
        #     projects: '**/*Tests/*.csproj'
        #     arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'

        - task: DotNetCoreCLI@2
          displayName: 'Publish'
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifacts'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: Deploy
      displayName: 'Deploy to Azure App Service'
      environment: 'production'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureWebApp@1
                displayName: 'Deploy to Azure App Service'
                inputs:
                  azureSubscription: 'edusync-azure-connection'
                  appName: '$(WebAppName)'
                  package: '$(Pipeline.Workspace)/drop/*.zip'
                  deploymentMethod: 'auto'
              
              - task: AzureWebAppConfiguration@1
                displayName: 'Update App Service Configuration'
                inputs:
                  azureSubscription: 'edusync-azure-connection'
                  appName: '$(WebAppName)'
                  configurationStrings: |
                    [
                      {
                        "name": "ConnectionStrings__DefaultConnection",
                        "value": "$(DatabaseConnectionString)",
                        "slotSetting": false
                      },
                      {
                        "name": "ASPNETCORE_ENVIRONMENT",
                        "value": "Production",
                        "slotSetting": false
                      },
                      {
                        "name": "WEBSITE_RUN_FROM_PACKAGE",
                        "value": "1",
                        "slotSetting": false
                      },
                      {
                        "name": "ApplicationInsights__InstrumentationKey",
                        "value": "$(AppInsightsKey)",
                        "slotSetting": false
                      },
                      {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "$(AppInsightsKey)",
                        "slotSetting": false
                      }
                    ]
